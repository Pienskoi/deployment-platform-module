controller:
  JCasC:
    configScripts:
      jobs: |
        jobs:
          - script: >
              job('Build job') {
                label('ansible')

                scm {
                  github('Pienskoi/DevOpsProject', 'main')  
                }

                wrappers {
                  credentialsBinding {
                    file('ANSIBLE_SA_KEY', 'ansible-service-account')
                    usernamePassword('REGISTRY_USERNAME', 'REGISTRY_PASSWORD', 'registry-credentials')
                  }
                }

                steps {
                  ansiblePlaybookBuilder {
                    playbook('/ansible/build.yml')
                    inventory {
                      inventoryPath{
                        path('/ansible/inventory.gcp.yml')
                      }
                    }
                    credentialsId('ansible-ssh-key')
                    extraVars {
                      extraVar {
                        hidden(true)
                        key('ansible_sa_key_path')
                        value('$ANSIBLE_SA_KEY')
                      }
                      extraVar {
                        hidden(true)
                        key('project_id')
                        value('$PROJECT_ID')
                      }
                      extraVar {
                        hidden(false)
                        key('image_tag')
                        value('$BUILD_NUMBER')
                      }
                      extraVar {
                        hidden(true)
                        key('registry_username')
                        value('$REGISTRY_USERNAME')
                      }
                      extraVar {
                        hidden(true)
                        key('registry_password')
                        value('$REGISTRY_PASSWORD')
                      }
                    }
                  }
                }
              }

          - script: >
              job('Deploy job') {
                label('ansible')

                scm {
                  github('Pienskoi/DevOpsProject', 'main')  
                }

                wrappers {
                  credentialsBinding {
                    file('ANSIBLE_SA_KEY', 'ansible-service-account')
                    file('GKE_SA_KEY', 'gke-service-account')
                    string('LOCATION', 'cluster-location')
                    string('PROJECT_ID', 'project-id')
                    string('CI_CLUSTER_NAME', 'ci-cluster-name')
                    string('QA_CLUSTER_NAME', 'qa-cluster-name')
                    string('MYSQL_HOST', 'mysql-host')
                    string('MYSQL_USER', 'mysql-user')
                    string('MYSQL_PASSWORD', 'mysql-password')
                  }
                }

                parameters {
                  choice {
                    name('ENV_NAME')
                    description('Pick env name')
                    choices(['CI', 'QA'])
                  }
                  imageTag {
                    name('DOCKER_IMAGE')
                    description('Pick version number to deploy')
                    image('spring-petclinic')
                    registry('docker-registry.project.com')
                    credentialId('registry')
                    defaultTag('latest')
                    filter('')
                  }
                }

                steps {
                  ansiblePlaybookBuilder {
                    playbook('/ansible/deploy.yml')
                    inventory {
                      inventoryPath {
                        path('/ansible/inventory.gcp.yml') 
                      }
                    }
                    credentialsId('ansible-ssh-key')
                    extraVars {
                      extraVar {
                        hidden(true)
                        key('ansible_sa_key_path')
                        value('$ANSIBLE_SA_KEY')
                      }
                      extraVar {
                        hidden(true)
                        key('gke_sa_key_path')
                        value('$GKE_SA_KEY')
                      }
                      extraVar {
                        hidden(true)
                        key('location')
                        value('$LOCATION')
                      }
                      extraVar {
                        hidden(true)
                        key('project_id')
                        value('$PROJECT_ID')
                      }
                      extraVar {
                        hidden(false)
                        key('ci_cluster_name')
                        value('$CI_CLUSTER_NAME')
                      }
                      extraVar {
                        hidden(false)
                        key('qa_cluster_name')
                        value('$QA_CLUSTER_NAME')
                      }
                      extraVar {
                        hidden(false)
                        key('env_name')
                        value('$ENV_NAME')
                      }
                      extraVar {
                        hidden(false)
                        key('image')
                        value('$DOCKER_IMAGE')
                      }
                      extraVar {
                        hidden(true)
                        key('mysql_host')
                        value('$MYSQL_HOST')
                      }
                      extraVar {
                        hidden(true)
                        key('mysql_user')
                        value('$MYSQL_USER')
                      }
                      extraVar {
                        hidden(true)
                        key('mysql_password')
                        value('$MYSQL_PASSWORD')
                      }
                    }
                  }
                }
              }

          - script: >
              pipelineJob('Build pipeline') {
                definition {
                  cpsScm {
                    lightweight(true)
                    scm {
                      github('Pienskoi/DevOpsProject', 'main')  
                    }
                    scriptPath('jenkins/build.jenkinsfile')
                  }
                }

                triggers {
                  GenericTrigger {
                    genericVariables {
                      genericVariable {
                        key('ref')
                        value('$.ref')
                      }
                    }
                    causeString('Triggered on $ref')
                    regexpFilterText('$ref')
                    regexpFilterExpression('refs/heads/(main|develop)')
                  }
                }
              }

          - script: >
              pipelineJob('Deploy pipeline') {
                definition {
                  cpsScm {
                    lightweight(true)
                    scm {
                      github('Pienskoi/DevOpsProject', 'main')  
                    }
                    scriptPath('jenkins/deploy.jenkinsfile')
                  }
                }
              }
