pipeline {
  agent {
    kubernetes {
      defaultContainer 'google-cloud-sdk'
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: google-cloud-sdk
            image: google/cloud-sdk:latest
            tty: true
      '''
    }
  }

  parameters {
    choice(name: 'ENV_NAME', choices: ['CI', 'QA'], description: 'Pick env name')
    imageTag(
      name: 'DOCKER_IMAGE',
      description: 'Pick version number to deploy',
      image: 'spring-petclinic',
      registry: 'docker-registry.project.com',
      credentialId: 'registry-credentials',
      defaultTag: 'latest'
    )
  }

  stages {
    stage('Login with service account') {
      steps {
        withCredentials([file(credentialsId: 'gke-service-account', variable: 'SA_KEY')]) {
          sh 'gcloud auth activate-service-account --key-file=$SA_KEY'
        }
      }
    }

    stage('Get CI cluster credentials') {
      when {
        expression { ENV_NAME == 'CI' }
      }
      steps {
        withCredentials([
          string(credentialsId: 'ci-cluster-name', variable: 'CI_CLUSTER_NAME'),
          string(credentialsId: 'cluster-location', variable: 'LOCATION'),
          string(credentialsId: 'project-id', variable: 'PROJECT_ID')
          ]) {
          sh 'gcloud container clusters get-credentials $CI_CLUSTER_NAME --zone $LOCATION --project $PROJECT_ID'
        }
      }
    }

    stage('Install Helm Release on CI env') {
      when {
        expression { ENV_NAME == 'CI' }
      }
      steps {
            sh 'helm upgrade --install spring-petclinic ./spring-petclinic-chart --namespace petclinic --create-namespace'
      }
    }

    stage('Get QA cluster credentials') {
      when {
        expression { ENV_NAME == 'QA' }
      }
      steps {
        withCredentials([
          string(credentialsId: 'qa-cluster-name', variable: 'QA_CLUSTER_NAME'),
          string(credentialsId: 'cluster-location', variable: 'LOCATION'),
          string(credentialsId: 'project-id', variable: 'PROJECT_ID')
          ]) {
          sh 'gcloud container clusters get-credentials $QA_CLUSTER_NAME --zone $LOCATION --project $PROJECT_ID'
        }
      }
    }

    stage('Install Helm release on QA env') {
      when {
        expression { ENV_NAME == 'QA' }
      }
      steps {
          sh 'helm upgrade --install spring-petclinic ./spring-petclinic-chart --set image=$DOCKER_IMAGE --namespace petclinic --create-namespace'
      }
    }
  }
}
