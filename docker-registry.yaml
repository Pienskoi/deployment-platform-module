---
apiVersion: v1
kind: Pod
metadata:
  name: docker-registry-pod
  labels:
    app: registry
spec:
  containers:
  - name: registry
    image: registry:2
    volumeMounts:
    - name: certs-vol
      mountPath: "/certs"
      readOnly: true
    - name: auth-vol
      mountPath: "/auth"
      readOnly: true
    - name: sa-vol
      mountPath: "/sa"
      readOnly: true
    env:
    - name: REGISTRY_AUTH
      value: "htpasswd"
    - name: REGISTRY_AUTH_HTPASSWD_REALM
      value: "Registry Realm"
    - name: REGISTRY_AUTH_HTPASSWD_PATH
      value: "/auth/htpasswd"
    - name: REGISTRY_HTTP_TLS_CERTIFICATE
      value: "/certs/tls.crt"
    - name: REGISTRY_HTTP_TLS_KEY
      value: "/certs/tls.key"
    - name: REGISTRY_STORAGE
      value: "gcs"
    - name: REGISTRY_STORAGE_GCS_BUCKET
      value: "docker-registry-bucket"
    - name: REGISTRY_STORAGE_GCS_KEYFILE
      value: "/sa/service-account.json"
  volumes:
  - name: certs-vol
    secret:
      secretName: certs-secret
  - name: auth-vol
    secret:
      secretName: auth-secret
  - name: sa-vol
    secret:
      secretName: sa-secret
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-svc
  annotations:
    cloud.google.com/app-protocols: '{"https-port":"HTTPS"}'
spec:
  type: NodePort
  selector:
    app: registry
  ports:
  - name: https-port
    port: 443
    targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docker-registry-ilb
  annotations:
    ingress.gcp.kubernetes.io/pre-shared-cert: "registry"
    kubernetes.io/ingress.class: "gce-internal"
    kubernetes.io/ingress.allow-http: "false"
spec:
  defaultBackend:
    service:
      name: docker-registry-svc
      port:
        number: 443
