---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-deployment
  labels:
    app: docker-registry
spec:
  replicas: 2
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
      - name: docker-registry
        image: registry:2
        volumeMounts:
        - name: certs-vol
          mountPath: "/certs"
          readOnly: true
        - name: auth-vol
          mountPath: "/auth"
          readOnly: true
        - name: sa-vol
          mountPath: "/sa"
          readOnly: true
        env:
        - name: REGISTRY_HTTP_HOST
          value: https://{{ .Values.domain }}
        - name: REGISTRY_HTTP_SECRET
          value: {{ randAlphaNum 8 | quote }}
        - name: REGISTRY_AUTH
          value: "htpasswd"
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: "Registry Realm"
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: "/auth/htpasswd"
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: "/certs/tls.crt"
        - name: REGISTRY_HTTP_TLS_KEY
          value: "/certs/tls.key"
        - name: REGISTRY_STORAGE
          value: "gcs"
        - name: REGISTRY_STORAGE_GCS_BUCKET
          value: {{ .Values.storageBucketName }}
        - name: REGISTRY_STORAGE_GCS_KEYFILE
          value: "/sa/service-account.json"
      volumes:
      - name: certs-vol
        secret:
          secretName: certs-secret
      - name: auth-vol
        secret:
          secretName: auth-secret
      - name: sa-vol
        secret:
          secretName: sa-secret
